# Dependencies
node_modules/
__pycache__/
*.pyc

# Build files
dist/
build/
*.egg-info/

# Environment
.env
.env.local
.env.*.local

# IDE
.vscode/
.idea/

# Logs
*.log
npm-debug.log*

# System Files
.DS_Store
Thumbs.db

# Backend files
src/pages/api/
requirements.txt
Dockerfile

# Python
*.py[cod]
*$py.class
*.so
.Python
env/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Node
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Environment variables
.env
.env.local
.env.*.local

# IDE
.idea/
.vscode/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Build output
dist/
build/

# Logs
logs
*.log

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Configure Git to use a higher timeout and compression
git config http.postBuffer 524288000
git config http.lowSpeedLimit 1000
git config http.lowSpeedTime 300
git config core.compression 9

# Try pushing again with these new settings
git push -u origin main

# First, create a new commit with your current changes
git commit -m "Initial commit"

# Then try pushing with the --no-verify flag
git push -u origin main --no-verify

# First, let's clean up any partial uploads
git reset --soft HEAD~1

# Add files in smaller groups
git add src/
git commit -m "Add source files"
git push -u origin main

# Add package files
git add package.json package-lock.json
git commit -m "Add package files"
git push origin main

# Add remaining files
git add .
git commit -m "Add remaining files"
git push origin main

# Set Git to handle large files better
git config --global http.postBuffer 524288000
git config --global http.maxRequestBuffer 524288000
git config --global core.compression 9
git config --global http.lowSpeedLimit 1000
git config --global http.lowSpeedTime 300

# Then try pushing again
git push -u origin main --force
